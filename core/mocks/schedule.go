// Code generated by mockery v2.20.2. DO NOT EDIT.

package coremock

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// Schedule is an autogenerated mock type for the Schedule type
type Schedule struct {
	mock.Mock
}

// Left provides a mock function with given fields:
func (_m *Schedule) Left() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// Next provides a mock function with given fields:
func (_m *Schedule) Next() (time.Time, bool) {
	ret := _m.Called()

	var r0 time.Time
	var r1 bool
	if rf, ok := ret.Get(0).(func() (time.Time, bool)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() time.Time); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(time.Time)
	}

	if rf, ok := ret.Get(1).(func() bool); ok {
		r1 = rf()
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

// Start provides a mock function with given fields: startAt
func (_m *Schedule) Start(startAt time.Time) {
	_m.Called(startAt)
}

type mockConstructorTestingTNewSchedule interface {
	mock.TestingT
	Cleanup(func())
}

// NewSchedule creates a new instance of Schedule. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSchedule(t mockConstructorTestingTNewSchedule) *Schedule {
	mock := &Schedule{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

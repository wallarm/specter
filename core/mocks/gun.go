// Code generated by mockery v2.20.2. DO NOT EDIT.

package coremock

import (
	mock "github.com/stretchr/testify/mock"
	core "github.com/wallarm/specter/core"
)

// Gun is an autogenerated mock type for the Gun type
type Gun struct {
	mock.Mock
}

// Bind provides a mock function with given fields: aggr, deps
func (_m *Gun) Bind(aggr core.Aggregator, deps core.GunDeps) error {
	ret := _m.Called(aggr, deps)

	var r0 error
	if rf, ok := ret.Get(0).(func(core.Aggregator, core.GunDeps) error); ok {
		r0 = rf(aggr, deps)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Shoot provides a mock function with given fields: ammo
func (_m *Gun) Shoot(ammo core.Ammo) {
	_m.Called(ammo)
}

type mockConstructorTestingTNewGun interface {
	mock.TestingT
	Cleanup(func())
}

// NewGun creates a new instance of Gun. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewGun(t mockConstructorTestingTNewGun) *Gun {
	mock := &Gun{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

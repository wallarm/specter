// Code generated by mockery v2.20.2. DO NOT EDIT.

package netmock

import mock "github.com/stretchr/testify/mock"

// DNSCache is an autogenerated mock type for the DNSCache type
type DNSCache struct {
	mock.Mock
}

// Add provides a mock function with given fields: addr, resolved
func (_m *DNSCache) Add(addr string, resolved string) {
	_m.Called(addr, resolved)
}

// Get provides a mock function with given fields: addr
func (_m *DNSCache) Get(addr string) (string, bool) {
	ret := _m.Called(addr)

	var r0 string
	var r1 bool
	if rf, ok := ret.Get(0).(func(string) (string, bool)); ok {
		return rf(addr)
	}
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(addr)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string) bool); ok {
		r1 = rf(addr)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

type mockConstructorTestingTNewDNSCache interface {
	mock.TestingT
	Cleanup(func())
}

// NewDNSCache creates a new instance of DNSCache. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDNSCache(t mockConstructorTestingTNewDNSCache) *DNSCache {
	mock := &DNSCache{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
